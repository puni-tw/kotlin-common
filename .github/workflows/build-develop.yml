name: Develop

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Notify slack success
        if: success()
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ci
          status: STARTING
          color: warning
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Setup Codeclimate Cache
        uses: actions/cache@v1
        with:
          path: ./cc-test-reporter
          key: ${{ runner.os }}-cc-test-reporter-${{ hashFiles('**/.github/workflows/build-master.yml') }}
          restore-keys: |
            ${{ runner.os }}-cc-test-reporter
      - name: Setup build cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache
      - name: Setup gradle wrapper cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper
      - name: Test & Codeclimate
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CODE_CLIMATE_REPORTER_ID}}
        run: |
          mkdir -p cc-test-reporter
          [[ -e ./cc-test-reporter/bin ]] || curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter/bin
          chmod +x ./cc-test-reporter/bin
          ./cc-test-reporter/bin before-build
          ./gradlew check covAll
          export JACOCO_SOURCE_PATH=$(./gradlew -q collectJacocoSourcePath | tail -n 1)
          ./cc-test-reporter/bin format-coverage build/reports/jacoco/covAll/covAll.xml --input-type jacoco
          ./cc-test-reporter/bin upload-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          file: build/reports/jacoco/covAll/covAll.xml
      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: ci
          status: SUCCESS
          color: good
      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          message_id: ${{ steps.slack.outputs.message_id }}
          channel: ci
          status: FAILED
          color: danger
